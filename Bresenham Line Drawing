#include<GL/glut.h>
#include<GL/glu.h>
void bresenham(int x1, int y1, int x2, int y2)
{
int dx, dy;
dx = x2-x1;
dy = y2-y1;
int x,y,p0, p1;
p0 = 2*dy-dx;
x = x1;
y = y1;
for(int i = 0; i<=x2; i++)
{
if(p0<0){
p1 = p0+2*dx;
x +=1;
y = y;
glVertex2f(x,y);
}
else{
p1 = p0+2*dy-2*dx;
x +=1;
y +=1;
glVertex2f(x,y);
}
}
}
void display()
{
glClear(GL_COLOR_BUFFER_BIT);
glPointSize(2);
glColor3f(1.0,0.0,0.0);
glBegin(GL_POINTS);
bresenham(100,100,300,300);
glEnd();
glFlush();
}
int main(int argc, char** argv)
{
glutInit(&argc, argv);
glutInitDisplayMode(GLUT_SINGLE|GLUT_RGB);
glutInitWindowPosition(0,0);
glutInitWindowSize(640, 480);
glutCreateWindow("bresenham line");
//note
glClearColor(1.0,1.0,1.0,1.0);

gluOrtho2D(0,640,0,480);
glutDisplayFunc(display);
glutMainLoop();
return 0;
}
